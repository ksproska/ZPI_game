<color=#a44fff>import</color> random
<color=#a44fff>from</color> Individual <color=#a44fff>import</color> Individual


<color=#a44fff>class</color> SelectorTournament:

    <color=#a44fff>def</color> __init__(<color=#66c2ff>self</color>, size_percentage):
        <color=#66c2ff>self</color>.size_percentage = size_percentage

    <color=#a44fff>def</color> <color=#ffa704>get</color>(<color=#66c2ff>self</color>, generation: <color=#ff6600>list</color>) -> Individual:  
        tournament_size = <color=#ff6600>int</color>(<color=#ff6600>len</color>(generation) * <color=#66c2ff>self</color>.size_percentage)
        selectedIndexes = random.sample(<color=#ff6600>range</color>(<color=#ff6600>len</color>(generation)), tournament_size)  
        selected = [generation[i] <color=#a44fff>for</color> i in selectedIndexes]  
        <color=#a44fff>return</color> <color=#ff6600>min</color>(selected, key=<color=#a44fff>lambda</color> x: x.score)  
