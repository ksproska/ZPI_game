<color=#006e05>import</color> random
<color=#006e05>from</color> DistancesGrid <color=#006e05>import</color> DistancesGrid
<color=#006e05>from</color> Circuit <color=#006e05>import</color> Circuit


<color=#aaf502>class</color> <color=#009607>GeneticAlgorithm</color>:
    <color=#aaf502>def</color> __init__(<color=#188600>self</color>, weights_grid: DistancesGrid, generation_size: <color=#006e05>int</color>, selector,
                 crosser, crossover_probability: <color=#006e05>float</color>):
        ...
        <color=#188600>self</color>.crosser = crosser  
        <color=#188600>self</color>.crossover_probability = crossover_probability  
        ...

    <color=#aaf502>def</color> <color=#3e9360>run_iteration</color>(<color=#188600>self</color>):
        next_generation = <color=#006e05>list</color>()
        <color=#aaf502>while</color> <color=#006e05>len</color>(next_generation) < <color=#006e05>len</color>(<color=#188600>self</color>.generation):
            parent1 = <color=#188600>self</color>.selector.get(<color=#188600>self</color>.generation)
            parent2 = <color=#188600>self</color>.selector.get(<color=#188600>self</color>.generation)

            child_genotype = parent1.city_ids  
            <color=#aaf502>if</color> <color=#188600>self</color>.crossover_probability < random.random():  
                child_genotype = <color=#188600>self</color>.crosser.get(
                    parent1.city_ids, parent2.city_ids)  
            ...

            child = Circuit(child_genotype, <color=#188600>self</color>.weights_grid)  
            next_generation.append(child)  
        <color=#188600>self</color>.generation = next_generation  
        <color=#188600>self</color>.best_for_iteration = Circuit.get_best(<color=#188600>self</color>.generation)
        <color=#188600>self</color>.iteration += <color=#89b68b>1</color>  

        <color=#aaf502>if</color> <color=#188600>self</color>.best.score > <color=#188600>self</color>.best_for_iteration.score:  
            <color=#188600>self</color>.best = <color=#188600>self</color>.best_for_iteration  
