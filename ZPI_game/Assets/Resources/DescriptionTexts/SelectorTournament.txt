<color=#006e05>import</color> random
<color=#006e05>from</color> Circuit <color=#006e05>import</color> Circuit


<color=#aaf502>class</color> <color=#009607>SelectorTournament</color>:

    <color=#aaf502>def</color> __init__(<color=#188600>self</color>, size_percentage):
        <color=#188600>self</color>.size_percentage = size_percentage

    <color=#aaf502>def</color> <color=#3e9360>get</color>(<color=#188600>self</color>, generation: <color=#006e05>list</color>) -> Circuit:  
        tournament_size = <color=#006e05>int</color>(<color=#006e05>len</color>(generation) * <color=#188600>self</color>.size_percentage)
        selectedIndexes = random.sample(<color=#006e05>range</color>(<color=#006e05>len</color>(generation)), tournament_size)  
        selected = [generation[i] <color=#aaf502>for</color> i in selectedIndexes]  
        <color=#aaf502>return</color> <color=#006e05>min</color>(selected, key=<color=#aaf502>lambda</color> x: x.score)  
